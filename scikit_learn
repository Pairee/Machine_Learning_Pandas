Scikit-learn을 이용한 회귀분석
기계학습 라이브러리 Scikit-learn을 사용하면 Loss Function을 최소값으로 만드는 \beta_0β 
0
​	
 , \beta_1β 
1
​	
  을 쉽게 구할 수 있습니다.

주어진 데이터와 다음 선형 모델을 이용하여 최적의 \beta_0β 
0
​	
 , \beta_1β 
1
​	
  값을 scikit-learn 라이브러리를 이용해 알아보겠습니다.

y^{(i)} \sim \beta_0 x^{(i)} + \beta_1y 
(i)
 ∼β 
0
​	
 x 
(i)
 +β 
1
​	
 

실습
loss() 함수를 완성하세요. 앞서 구현한 함수를 그대로 사용할 수 있습니다.

sklearn에서는 벡터와 행렬을 나타내는 방법으로 numpy 배열을 표준으로 사용하고 있습니다. 따라서 X와 Y를 각각 np.array로 변환해야 합니다. 하나의 속성(feature)에 여러가지 값(sample)을 가지는 경우, reshape(-1, 1)을 적용하여 열벡터로 만들어야 합니다. X는 하나의 종속변수 Y에 대한 여러 값을 가지므로 reshape(-1, 1)을 적용합니다. np.array(X).reshape(-1, 1) 명령어를 이용해 길이 10인 1차원 리스트 X 를 10\times 110×1 형태의 np.array로 변경하세요.

종속변수 Y는 독립변수 X에 대한 값이므로 reshape(-1, 1)을 할 필요가 없습니다. 리스트 Y를 np.array 형식으로 변경하세요.

모델을 학습합니다.

lrmodel = LinearRegression()
lrmodel.fit(train_X, train_Y)
Copy
모델을 이용해 얻은 최적의 beta_0, beta_1 값과 Loss를 확인합니다.
